<!DOCTYPE html>
<html>
<head>
<meta http-equiv='Content-type' content='text/html; charset=utf-8'>
<meta name='viewport' content='width=device-width, initial-scale=1.0'>
<title>Главная</title>
<link rel='stylesheet' href='style.css'>	
<script src="mqttws31.min.js" type="text/javascript"></script>
<style type="text/css">
h1 {font-size:4em;}
h3 {margin: 5px 0;}
.colortextred {color:red; font-size:24px;}
.colortextgray {color:gray; font-size:24px;}
.flex-container {display: flex;}
.flex-item {flex:50%;}

input[type=number] {
	margin: 0 0 4px 8px;
	padding: 4px;
	border: 1px solid #ccc;
	border-radius: 4px;
	font-size:18px;
	width:3em;
}

table {width: 100%;}
.stolb1 {width: 50%;}
.stolb2 {width: 50%; vertical-align: middle;}

/* Чекбоксы и радиокнопки */
@keyframes click-wave {
0% {
	height: 40px;
	width: 40px;
	opacity: 0.35;
	position: relative;
}
100% {
	height: 200px;
	width: 200px;
	margin-left: -80px;
	margin-top: -80px;
	opacity: 0;
}	
}

.option-input {
-webkit-appearance: none;
-moz-appearance: none;
-ms-appearance: none;
-o-appearance: none;
appearance: none;
position: relative;
top: 13.33333px;
right: 0;
bottom: 0;
left: 0;
height: 40px;
width: 40px;
transition: all 0.15s ease-out 0s;
background: #cbd1d8;
border: none;
color: #2ecc71;
cursor: pointer;
display: inline-block;
margin-right: 0.5rem;
outline: none;
position: relative;
z-index: 1000;
}
.option-input:checked {
background: #1486ba;
}
.option-input:checked::before {
height: 40px;
width: 40px;
position: absolute;
content: '✔';
display: inline-block;
font-size: 26.6666px;
text-align: center;
line-height: 40px;
}
.option-input:checked::after {
-webkit-animation: click-wave 0.4s;
-moz-animation: click-wave 0.4s;
animation: click-wave 0.4s;
background: #1486ba;
content: '';
display: block;
position: relative;
z-index: 100;
}
.option-input.radio {
border-radius: 50%;
}
.option-input.radio::after {
border-radius: 50%;
}
.flex-item label {
display: block;
line-height: 40px;
}


/*Круглые анимированные кнопки - индикаторы*/
:root {
--bg:#3498db;
--checkmark:#2ecc71;
--cross:#F44336;
--btn:#1486ba;
--time:1s;
}

#btn1, #btn2 {
width:60px;
height:60px;
border-radius:100%;
background:var(--btn);
display:flex;
justify-content:center;
align-items:center;
pointer-events: none;
}

.sensors {
font-size:0;
transform:rotate(225deg);
transition:margin var(--time) ease;
margin-top:8px;
}

.sensors:before {
content:'';
display:inline-block;
width:46.6px;
height:5px;
background:var(--cross);
transition:all var(--time) ease;
position:absolute;
margin-left:-20px;
transform:rotate(180deg);
border-radius:3px;
}

.sensors:after {
content:'';
display:inline-block;
width:5px;
height:46.6px;
background:var(--cross);
transition:all var(--time) ease;
position:absolute;
margin-top:-20px;
transform:rotate(360deg);
border-radius:3px;
}

.sensors.checked {
margin-right:15px;
margin-top:30px;
}

.sensors.checked:before {
content:'';
display:inline-block;
background:var(--checkmark);
transform:rotate(0);
width:20px;
height:5px;
margin:0;
}

.sensors.checked:after {
content:'';
display:inline-block;
background:var(--checkmark);
width:5px;
height:40px;
margin:0;
transform:rotate(0);
}

#btnB {
width:120px;
height:120px;
border-radius:100%;
background:var(--btn);
display:flex;
justify-content:center;
align-items:center;
pointer-events: none;
}

.relay {
font-size:0;
transform:rotate(225deg);
transition:margin var(--time) ease;
margin-top:16px;
}

.relay:before {
content:'';
display:inline-block;
width:94px;
height:10px;
background:var(--cross);
transition:all var(--time) ease;
position:absolute;
margin-left:-40px;
transform:rotate(180deg);
border-radius:3px;
}

.relay:after {
content:'';
display:inline-block;
width:10px;
height:94px;
background:var(--cross);
transition:all var(--time) ease;
position:absolute;
margin-top:-40px;
transform:rotate(360deg);
border-radius:3px;
}

.relay.checked {
margin-right:30px;
margin-top:60px;
}

.relay.checked:before {
content:'';
display:inline-block;
background:var(--checkmark);
transform:rotate(0);
width:40px;
height:10px;
margin:0;
}

.relay.checked:after {
content:'';
display:inline-block;
background:var(--checkmark);
transform:rotate(0);
width:10px;
height:80px;
margin:0;
}
</style>

</head>
<body>
<div id="container">
	<div id="part1">
		<ul id="menu">
			<li>
				<div id="hamburger"><span class="hamburger"></span></div>
				<ul>
					<li><a href="index.htm">Главная</a></li>
					<li><a href="setup.htm">Настройка сети</a></li>
					<li><a href="edit.htm">Файлы</a></li>
					<li><a href="update.htm">Обновление</a></li>
				</ul>
			</li>
		</ul>
	</div>
	<div id="part3"></div>
	<div id="part2">Главная</div>
</div>

<div class="content">
	<table>
		<tr>
			<td class='stolb1'><h3>Датчики</h3></td>
			<td class='stolb2'><h3>Освещение</h3></td>
		</tr>
		<tr>
			<td>
				<div id="btn1">
				    <div class="sensors" id="sensor1State"></div>
				</div>
				<br />
				<div id="btn2">
				    <div class="sensors" id="sensor2State"></div>
				</div>
			</td>
			<td>
				<div id="btnB">
				    <div class="relay" id="relayState"></div>
				</div>
			</td>
		</tr>
	</table>
</div>

<div class="content">
<div class='flex-container'>
	<div class="flex-item">
		<h3>Режим<br />работы</h3>
		<label>
			<input type="radio" class="option-input radio" name="relayMode" onchange="startSendData('JSON')"/>
			ОТКЛ
		</label>
		<label>
			<input type="radio" class="option-input radio" name="relayMode" onchange="startSendData('JSON')"/>
			ВКЛ
		</label>
		<label>
			<input type="radio" class="option-input radio" name="relayMode" onchange="startSendData('JSON')"/>
			АВТО
		</label>
		</div>
  	<div class="flex-item">
  		<h3>Задействовать<br />датчики</h3>
		<label>
    		<input type="checkbox" id="sensor1Use"  class="option-input checkbox" onchange="startSendData('JSON')"/>
    		Датчик 1
  		</label>
		<label>
			<input type="checkbox" id="sensor2Use" class="option-input checkbox" onchange="startSendData('JSON')"/>
		  	Датчик 2
		</label>
  	</div>
</div>
<br />
<hr>
	<div>
		<label for="delayOff">Задержка отключения, сек </label>
		<input type="number" id="delayOff" onchange="startSendData('JSON')" value="0">
	</div>
</div>

<div class="content">
	<h3>Статистика</h3>
	<h4>Количество включений: <span id="numbOn"></span></h4>
	<h4>Суммарное время работы освещения: <span id="timeRelayOn"></span></h4>
	<hr>
	<h4>Максимальное время непрерывной работы освещения: <span id="mdTimeRelayOn"></span></h4>
	<h4>Время работы после включения: <span id="timeESPOn"></span></h4>

</div>


<script>
//Скрипт для Android приложения
let dataSend = {
	page: "index",
	relayMode: 2,
	sensor1Use: false,
	sensor2Use: false,
	delayOff: 10000
};
let data = {
	page: "index",
	relayState: false,
	sensor1State: false,
	sensor2State: false,
	numbOn: 0,
	timeRelayOn: 0,
	mdTimeRelayOn: 0,
	timeESPOn: 0
};


function updateAllPage() {
	document.getElementById("relayState").classList.toggle('checked', data["relayState"]);
	document.getElementById("sensor1State").classList.toggle('checked', data["sensor1State"]);
	document.getElementById("sensor2State").classList.toggle('checked', data["sensor2State"]);
	document.getElementById("delayOff").value = dataSend["delayOff"]/1000;
	document.getElementById("sensor1Use").checked = dataSend["sensor1Use"];
	document.getElementById("sensor2Use").checked = dataSend["sensor2Use"];
	document.getElementsByName('relayMode')[dataSend["relayMode"]].checked = true;
	document.getElementById("numbOn").innerHTML = data["numbOn"];
	document.getElementById("timeRelayOn").innerHTML = millisToTime(data["timeRelayOn"]);
	document.getElementById("mdTimeRelayOn").innerHTML = millisToTime(data["mdTimeRelayOn"]);
	document.getElementById("timeESPOn").innerHTML = millisToTime(data["timeESPOn"]);
};

function millisToTime(millis){
	let sec = millis/1000;
	//console.log("sec=", sec);
	let d = sec/86400 ^ 0;
	let h = (sec-d*86400)/3600 ^ 0;
	let m = (sec-d*86400-h*3600)/60 ^ 0;
	let s = (sec-d*86400-h*3600-m*60)^0;
	return (d>0?d+"д":"")+" "+(h<10?"0"+h:h)+":"+(m<10?"0"+m:m)+":"+(s<10?"0"+s:s);
}

function updateDataForSend() {
	dataSend["delayOff"] = document.getElementById("delayOff").value*1000;
	dataSend["sensor1Use"] = document.getElementById("sensor1Use").checked;
	dataSend["sensor2Use"] = document.getElementById("sensor2Use").checked;
	let mode = document.getElementsByName('relayMode');
	for (var i=0; i<mode.length; i++) {
        if (mode[i].checked) {
        	dataSend["relayMode"] = i;
        }
    }
};



function changeIndicTypeConnect(){
	if (wsState==1 && mqttState==0) document.getElementById("part3").innerHTML = "n";
	else if (wsState==0 && mqttState==1) document.getElementById("part3").innerHTML = "w";
	else document.getElementById("part3").innerHTML = "-";
};
function setIndicConnect(){
	document.getElementById("part3").classList.add("part3A");

};
function unsetIndicConnect(){
	document.getElementById("part3").classList.remove("part3A");
};


</script>
<script src="connect.js" type="text/javascript"></script>
</body>
</html>
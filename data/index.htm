<!DOCTYPE html>
<html>
<head>
	<meta http-equiv='Content-type' content='text/html; charset=utf-8'>
	<meta name='viewport' content='width=device-width, initial-scale=1.0'>
	<title>Главная</title>
	<link rel='stylesheet' href='style.css'>	
	<style type="text/css">

		h1 {font-size:4em;}
		h3 {margin: 5px 0;}
		.colortextred {color:red; font-size:24px;}
		.colortextgray {color:gray; font-size:24px;}

		.flex-container {display: flex;}
		.flex-item {flex:50%;}
    	
		input[type=number] {
		  margin: 0 0 4px 8px;
		  padding: 4px;
		  border: 1px solid #ccc;
		  border-radius: 4px;
		  font-size:18px;
		  width:3em;
		}


		@keyframes click-wave {
			0% {
				height: 40px;
				width: 40px;
				opacity: 0.35;
				position: relative;
			}
			100% {
				height: 200px;
				width: 200px;
				margin-left: -80px;
				margin-top: -80px;
				opacity: 0;
			}	
		}

		.option-input {
		-webkit-appearance: none;
		-moz-appearance: none;
		-ms-appearance: none;
		-o-appearance: none;
		appearance: none;
		position: relative;
		top: 13.33333px;
		right: 0;
		bottom: 0;
		left: 0;
		height: 40px;
		width: 40px;
		transition: all 0.15s ease-out 0s;
		background: #cbd1d8;
		border: none;
		color: #2ecc71;
		cursor: pointer;
		display: inline-block;
		margin-right: 0.5rem;
		outline: none;
		position: relative;
		z-index: 1000;
		}
		.option-input:checked {
		background: #1486ba;
		}
		.option-input:checked::before {
		height: 40px;
		width: 40px;
		position: absolute;
		content: '✔';
		display: inline-block;
		font-size: 26.6666px;
		text-align: center;
		line-height: 40px;
		}
		.option-input:checked::after {
		-webkit-animation: click-wave 0.65s;
		-moz-animation: click-wave 0.65s;
		animation: click-wave 0.65s;
		background: #1486ba;
		content: '';
		display: block;
		position: relative;
		z-index: 100;
		}
		.option-input.radio {
		border-radius: 50%;
		}
		.option-input.radio::after {
		border-radius: 50%;
		}
		.flex-item label {
		display: block;
		line-height: 40px;
		}


:root {
    --bg:#3498db;
    --checkmark:#2ecc71;
    --cross:#F44336;
    --btn:#1486ba;
    
    --time:1s;
}

#btn {
    width:60px;
    height:60px;
    border-radius:100%;
    background:var(--btn);
    display:flex;
    justify-content:center;
    align-items:center;
    cursor:pointer;
    box-shadow:0 2px 5px rgba(0,0,0,.5);
}

#icon {
    font-size:0;
    transform:rotate(225deg);
    transition:margin var(--time) ease;
    margin-top:8px;
  filter:drop-shadow(-2px -2px 2px rgba(0,0,0,.8));
}

#icon:before {
    content:'';
    display:inline-block;
    width:46.6px;
    height:5px;
    background:var(--cross);
    transition:all var(--time) ease;
    position:absolute;
    margin-left:-20px;
    transform:rotate(180deg);
    border-radius:3px;
}

#icon:after {
    content:'';
    display:inline-block;
    width:5px;
    height:46.6px;
    background:var(--cross);
    transition:all var(--time) ease;
    position:absolute;
    margin-top:-20px;
    transform:rotate(360deg);
    border-radius:3px;
}

#icon.checked {
    margin-right:15px;
    margin-top:30px;
}

#icon.checked:before {
    content:'';
    display:inline-block;
    background:var(--checkmark);
    transform:rotate(0);
    width:20px;
    height:5px;
    margin:0;
}

#icon.checked:after {
    content:'';
    display:inline-block;
    background:var(--checkmark);
    width:5px;
    height:40px;
    margin:0;
    transform:rotate(0);
}



#btn2 {
    width:60px;
    height:60px;
    border-radius:100%;
    background:var(--btn);
    display:flex;
    justify-content:center;
    align-items:center;
    cursor:pointer;
    box-shadow:0 2px 5px rgba(0,0,0,.5);
}

#icon2 {
    font-size:0;
    transform:rotate(225deg);
    transition:margin var(--time) ease;
    margin-top:8px;
  filter:drop-shadow(-2px -2px 2px rgba(0,0,0,.8));
}

#icon2:before {
    content:'';
    display:inline-block;
    width:46.6px;
    height:5px;
    background:var(--cross);
    transition:all var(--time) ease;
    position:absolute;
    margin-left:-20px;
    transform:rotate(180deg);
    border-radius:3px;
}

#icon2:after {
    content:'';
    display:inline-block;
    width:5px;
    height:46.6px;
    background:var(--cross);
    transition:all var(--time) ease;
    position:absolute;
    margin-top:-20px;
    transform:rotate(360deg);
    border-radius:3px;
}

#icon2.checked {
    margin-right:15px;
    margin-top:30px;
}

#icon2.checked:before {
    content:'';
    display:inline-block;
    background:var(--checkmark);
    transform:rotate(0);
    width:20px;
    height:5px;
    margin:0;
}

#icon2.checked:after {
    content:'';
    display:inline-block;
    background:var(--checkmark);
    width:5px;
    height:40px;
    margin:0;
    transform:rotate(0);
}



#btn3 {
    width:120px;
    height:120px;
    border-radius:100%;
    background:var(--btn);
    display:flex;
    justify-content:center;
    align-items:center;
    cursor:pointer;
    box-shadow:0 2px 5px rgba(0,0,0,.5);
}

#icon3 {
    font-size:0;
    transform:rotate(225deg);
    transition:margin var(--time) ease;
    margin-top:16px;
  filter:drop-shadow(-2px -2px 2px rgba(0,0,0,.8));
}

#icon3:before {
    content:'';
    display:inline-block;
    width:94px;
    height:10px;
    background:var(--cross);
    transition:all var(--time) ease;
    position:absolute;
    margin-left:-40px;
    transform:rotate(180deg);
    border-radius:3px;
}

#icon3:after {
    content:'';
    display:inline-block;
    width:10px;
    height:94px;
    background:var(--cross);
    transition:all var(--time) ease;
    position:absolute;
    margin-top:-40px;
    transform:rotate(360deg);
    border-radius:3px;
}

#icon3.checked {
    margin-right:30px;
    margin-top:60px;
}

#icon3.checked:before {
    content:'';
    display:inline-block;
    background:var(--checkmark);
    transform:rotate(0);
    width:40px;
    height:10px;
    margin:0;
}

#icon3.checked:after {
    content:'';
    display:inline-block;
    background:var(--checkmark);
    width:10px;
    height:80px;
    margin:0;
    transform:rotate(0);
}

table {width: 100%;}
.stolb1 {width: 50%;}
.stolb2 {width: 50%; vertical-align: middle;}


</style>
</head>

<body>
<h3 class='top' id='top'>Главная</h3>
<div class='menu' id='menu'>
	<a href='index.htm'>Главная</a>
	<a href='setup.htm'>Системные настройки</a>
	<a href='edit.htm'>Файлы</a>
</div>

<div class='content'>
	<table>
		<tr>
			<td class='stolb1'><h3>Датчики</h3></td>
			<td class='stolb2'><h3>Освещение</h3></td>
		</tr>
		<tr>
			<td>
				<div id="btn">
				    <div class="checked" id="icon"></div>
				</div>
				<br />
				<div id="btn2">
				    <div class="" id="icon2"></div>
				</div>
			</td>
			<td>
				<div id="btn3">
				    <div class="" id="icon3"></div>
				</div>
			</td>
		</tr>
	</table>
</div>
<div class='content'>
<div class='flex-container'>
	<div class="flex-item">
		<h3>Режим<br />работы</h3>
		<label>
			<input type="radio" class="option-input radio" name="mode" checked />
			АВТО
		</label>
		<label>
			<input type="radio" class="option-input radio" name="mode" />
			ВКЛ
		</label>
		<label>
			<input type="radio" class="option-input radio" name="mode" />
			ОТКЛ
		</label>
		</div>
  	<div class="flex-item">
  		<h3>Задействовать<br />датчики</h3>
		<label>
    		<input type="checkbox" class="option-input checkbox" checked />
    		Датчик 1
  		</label>
		<label>
			<input type="checkbox" class="option-input checkbox" />
		  	Датчик 2
		</label>
  	</div>
</div>
<br />
<hr>
	<div>
		<label for="cvv">Задержка отключения, сек </label>
		<input type="number" id="cvv" value="500">
	</div>
</div>
<div class='content'>
	<h3>Статистика</h3>
</div>

<div class='content'>
	<table>
		<tr id='tr1'>
			<td rowspan="3" id='stolb1'>
				<canvas id="myCanvas" width="150" height="500"></canvas>
			</td>
			<td>
				<input type='number' onchange="predelMaxSet()" id='predelMax' name='predelMax' value='2000'>
				<p><button onclick="predMaxMinus()">-100</button>
				<button onclick="predMaxPlus()">+100</button></p>

			</td>
		</tr>
		<tr id='tr2'>
			<td>
				<h1 id='hz'>0</h1>
				<button id='butOnCV' class="colortextred" onclick="onCV()">ЦВ</button>
				<button id='butOnTG' class="colortextgray" onclick="onTG()">ТГ</button>
			</td>
		</tr>
		<tr id='tr3'> 
			<td>
				<button onclick="predMinMinus()">-100</button>
				<button onclick="predMinPlus()">+100</button>
				<p><input type='number' onchange="predelMinSet()" id='predelMin' name='predelMin' value='0'></p>
			</td>
		</tr>
	</table>
</div>

<script>
var btn = document.querySelector('#btn');
var icon = document.querySelector('#icon');
btn.addEventListener(
    'click', function() {
        icon.classList.toggle('checked');
    }
);

var btn2 = document.querySelector('#btn2');
var icon2 = document.querySelector('#icon2');
btn2.addEventListener(
    'click', function() {
        icon2.classList.toggle('checked');
    }
);

var btn3 = document.querySelector('#btn3');
var icon3 = document.querySelector('#icon3');
btn3.addEventListener(
    'click', function() {
        icon3.classList.toggle('checked');
    }
);


	let canvasAutoHeight = document.documentElement.clientHeight - document.getElementById("top").offsetHeight - document.getElementById("menu").offsetHeight - 3*10 - 3*5 - 20;
	document.getElementById("myCanvas").height = canvasAutoHeight;

	let data = {
		page: "index",
		freq: 0,
		impulsIzmerenieEnable: 0  //0-off, 1-CV, 2-TG
	};

	let canvas = document.getElementById("myCanvas");
	let width = canvas.width;
	let height = canvas.height;
	let widhtBar = 70;
	let heightBar = height-10-10-5;
	let bigLine = 20;
	let litleLine = 10;
	let shiftLine = 2;
	let predelMax = 1*document.getElementById("predelMax").value;
	let predelMin = 1*document.getElementById("predelMin").value;
	let predelDelta = predelMax-predelMin;
	let context = canvas.getContext("2d");

	
	function drawStart() {
		context.clearRect( 0, 0, width, height );
		context.lineWidth = 1;
		context.strokeStyle = "green";
		context.strokeRect( 10, height-10, widhtBar, -heightBar );

		context.beginPath();
		context.lineWidth = 1;
		context.strokeStyle = "red";
		context.font = "16px serif";
		let i=0;
		let iText=predelMin;
		while (i <= heightBar){
			context.moveTo(10+widhtBar+shiftLine, height-10-i);
			context.lineTo(10+widhtBar+shiftLine+bigLine, height-10-i);
			context.fillText(iText, 10+widhtBar+shiftLine+25, height-10-i+4);
			i = i + heightBar/10;
			iText = 1*iText + (predelMax-predelMin)/10;
			iText = iText.toFixed(0);
		}
		context.stroke();

		context.lineWidth = 0.5;
		i=0;
		while (i <= heightBar){
			context.moveTo(10+widhtBar+shiftLine, height-10-i);
			context.lineTo(10+widhtBar+shiftLine+litleLine, height-10-i);
			i = i + heightBar/50;
		}
		context.stroke();
	}


	function drawFrame() {
		context.clearRect( 10, height-10, widhtBar, -heightBar );
		context.fillStyle = "green";
		context.fillRect( 10, height-10+heightBar*(predelMin/predelDelta), widhtBar, -heightBar*(data["freq"]/predelDelta) );
	}


	function updateAllPage() {
		//document.getElementById("hz").innerHTML = data["freq"].toFixed(0);
		document.getElementById("hz").innerHTML = Math.floor(data["freq"]);
		if ( data["impulsIzmerenieEnable"] == 0 ) {
			document.getElementById("butOnCV").className = "colortextgray";
			document.getElementById("butOnTG").className = "colortextgray";
		} else if (data["impulsIzmerenieEnable"] == 1) {
			document.getElementById("butOnCV").className = "colortextred";
			document.getElementById("butOnTG").className = "colortextgray";
		} else if (data["impulsIzmerenieEnable"] == 2) {
			document.getElementById("butOnCV").className = "colortextgray";
			document.getElementById("butOnTG").className = "colortextred";
		}
	};

	function sendData () {
		console.log('TO Server: ', JSON.stringify( data ));
		if (connection) connection.send(JSON.stringify( data ));
	};


	drawFrame();
	drawStart();
	updateAllPage();
	let connection = new WebSocket('ws://' + location.host + ':81/index.htm', ['arduino']);
	
	connection.onopen = function () {
		//connection.send('ping');		
	};

	connection.onerror = function (error) {
		console.log('WebSocket Error ', error);
		alert("Ошибка " + error.message);
	};

	connection.onmessage = function (e) {
		console.log('FROM Server: ', e.data);
		let obj = JSON.parse(e.data);
		for (x in obj) {
			if ( data[x]  != null ) {
				data[x] = obj[x];
				data["freq"] = data["freq"]*5/10/2;
				updateAllPage();
				drawFrame();
			}
		}
	};


	function onCV() {
		if (document.getElementById("butOnCV").className == "colortextred")  data["impulsIzmerenieEnable"] = 0;
		else data["impulsIzmerenieEnable"] = 1;
		updateAllPage();
		sendData();
	};

	function onTG() {
		if (document.getElementById("butOnTG").className == "colortextred")  data["impulsIzmerenieEnable"] = 0;
		else  data["impulsIzmerenieEnable"] = 2;
		updateAllPage();
		sendData();
	};


	function predelMaxSet() {
		predelMax = 1*document.getElementById("predelMax").value;
		predelDelta = predelMax-predelMin;
		drawStart();
		drawFrame();
	};
	function predelMinSet() {
		predelMin = 1*document.getElementById("predelMin").value;
		predelDelta = predelMax-predelMin;
		drawStart();
		drawFrame();
	};

	function predMaxPlus() {
		let max = 1*document.getElementById("predelMax").value;
		document.getElementById("predelMax").value = max + 100;
		predelMaxSet();
	};
	function predMaxMinus() {
		let max = 1*document.getElementById("predelMax").value;
		let min = 1*document.getElementById("predelMin").value;
		if (max-100 > min) {
			document.getElementById("predelMax").value = max - 100;
			predelMaxSet();
		}
	};

	function predMinPlus() {
		let max = 1*document.getElementById("predelMax").value;
		let min = 1*document.getElementById("predelMin").value;
		if (min+100 < max) {
			document.getElementById("predelMin").value = min + 100;
			predelMinSet();
		}
	};
	function predMinMinus() {
		let min = 1*document.getElementById("predelMin").value;
		if (min-100 > 0) {
			document.getElementById("predelMin").value = min - 100;
			predelMinSet();
		}
	};

</script>
</body>
</html>